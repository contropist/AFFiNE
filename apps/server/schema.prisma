datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  @@map("users")
  id           String         @id @default(uuid()) @db.VarChar
  name         String         @db.VarChar
  email        String         @unique @db.VarChar
  avatarUrl    String?        @db.VarChar @map("avatar_url")
  tokenNonce   Int            @default(0) @db.SmallInt @map("token_nonce")
  password     String         @db.VarChar
  createdAt    DateTime       @default(now()) @db.Timestamptz(6) @map("created_at")
  googleUsers  GoogleUser[]   
  permissions  Permission[]
}

model Workspace {
  @@map("workspaces")
  id          String        @id @default(uuid()) @db.VarChar
  public      Boolean
  type        Int           @default(1) @db.SmallInt @map("type")
  createdAt   DateTime      @default(now()) @db.Timestamptz(6) @map("created_at")
  permissions Permission[]
}

model GoogleUser {
  @@map("google_users")
  id        String @id @default(uuid()) @db.VarChar
  userId    String @db.VarChar @map("user_id")
  googleId  String @unique @db.VarChar @map("google_id")
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Permission {
  @@map("permissions")
  id           String     @id @default(uuid()) @db.VarChar
  workspaceId  String     @db.VarChar @map("workspace_id")
  userId       String?    @db.VarChar @map("user_id")
  userEmail    String?    @map("user_email")
  type         Int        @db.SmallInt
  accepted     Boolean    @default(false)
  createdAt    DateTime   @default(now()) @db.Timestamptz(6) @map("created_at")
  user         User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  workspace    Workspace  @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
}
